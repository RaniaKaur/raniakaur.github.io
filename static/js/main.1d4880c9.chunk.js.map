{"version":3,"sources":["pages/education/education.mdx","pages/education/index.js","pages/skills/skills.mdx","pages/skills/index.js","pages/home/home-data.js","pages/home/index.js","pages/roles/index.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["MDXContent","props","_this","Object","classCallCheck","this","_super","call","layout","_this$props","components","objectWithoutProperties","react_default","a","createElement","dist","name","dist_index_esm","src","id","parentName","React","Component","EducationRoute","Education","useUIComponents","react","Route","path","component","index_esm","education_MDXContent","SkillsRoute","SkillsPage","skills_MDXContent","home_data","title","subTitle","descriptions","profilePicUrl","HomeRoute","HomePage","exact","homeData","RolesRoute","RolesPage","mdxModules","useMDXFiles","./role-1/document.mdx","__webpack_require__","e","then","bind","./role-2/document.mdx","./role-3/document.mdx","mdxModulesDesc","toConsumableArray","reverse","map","index","MDXComponent","other","assign","key","theme","layouts","Navigation","Navbar","SectionsPage","elements","p","h1","h2","h3","h4","h5","h6","blockquote","hr","inlineCode","ol","ul","App","Fragment","BrowserRouter","email","github","linkedin","medium","twitter","stackoverflow","Link","to","home","roles","skills","education","role","aria-label","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d4880c9.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.44,\"time\":26400,\"words\":88}\nimport { Logo } from '@create-react-resume/theme-default'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<Logo>\n  <img src=\"/img/fb-logo.png\" />\n</Logo>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"master-of-engineering-meng\"}}>{`Master of Engineering (M.Eng.)`}</MDXTag>\n<MDXTag name=\"h5\" components={components} props={{\"id\":\"massachusetts-institute-of-technology\"}}>{`Massachusetts Institute of Technology`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`2011–2013`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`Field of study: Computer science / The Department of Computer Architecture`}</MDXTag>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`Specialization - `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`Distributed applications and Internet systems`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`Grade: 4.5`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`}</MDXTag>\n           </MDXTag>\n  }\n}\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"master-of-engineering-meng\",\n    level: 3,\n    title: \"Master of Engineering (M.Eng.)\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","import EducationMDX from './education.mdx'\nimport * as React from 'react'\nimport { Route } from 'react-router'\nimport { useUIComponents, MDXThemeProvider } from '@create-react-resume/core'\n\nconst EducationRoute = () => {\n  const { Education } = useUIComponents()\n\n  return (\n    <Route\n      path=\"/education\"\n      component={() => (\n        <Education>\n          <MDXThemeProvider>\n            <EducationMDX />\n          </MDXThemeProvider>\n        </Education>\n      )}\n    />\n  )\n}\n\nexport default EducationRoute\n","\nimport React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.83,\"time\":49800,\"words\":166}\n\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`“But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?”`}</MDXTag>\n           </MDXTag>\n  }\n}\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","import SkillsMDX from './skills.mdx'\nimport * as React from 'react'\nimport { Route } from 'react-router'\nimport { useUIComponents, MDXThemeProvider } from '@create-react-resume/core'\n\nconst SkillsRoute = () => {\n  const { SkillsPage } = useUIComponents()\n\n  return (\n    <Route\n      path=\"/skills\"\n      component={() => (\n        <SkillsPage>\n          <MDXThemeProvider>\n            <SkillsMDX />\n          </MDXThemeProvider>\n        </SkillsPage>\n      )}\n    />\n  )\n}\n\nexport default SkillsRoute\n","export default {\n  title: 'Your Name Here',\n  subTitle: 'Lead Hacker​ @ Facebook',\n  descriptions: [\n    \"A Lead Hacker with over 10 years of experience. There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. \",\n  ],\n  profilePicUrl: 'https://avatars1.githubusercontent.com/u/1546903?s=460&v=4',\n}\n","import * as React from 'react'\nimport { Route } from 'react-router'\nimport { useUIComponents } from '@create-react-resume/core'\nimport homeData from './home-data'\n\nconst HomeRoute = () => {\n  const { HomePage } = useUIComponents()\n\n  return <Route path=\"/\" exact component={() => <HomePage {...homeData} />} />\n}\n\nexport default HomeRoute\n","import * as React from 'react'\nimport importAll from 'import-all.macro'\nimport { Route } from 'react-router'\nimport { useUIComponents, MDXThemeProvider, useMDXFiles } from '@create-react-resume/core'\n\nconst RolesRoute = () => {\n  const { RolesPage } = useUIComponents()\n  const mdxModules = useMDXFiles(importAll.deferred('./**/*.mdx'))\n  const mdxModulesDesc = [...mdxModules].reverse()\n  return (\n    <Route\n      path=\"/roles\"\n      component={() => (\n        <RolesPage>\n          {mdxModulesDesc.map((e, index) => {\n            const { MDXComponent, ...other } = e\n            return (\n              <MDXThemeProvider>\n                <MDXComponent {...other} key={index} />\n              </MDXThemeProvider>\n            )\n          })}\n        </RolesPage>\n      )}\n    />\n  )\n}\n\nexport default RolesRoute\n","import * as React from 'react'\nimport {\n  Navbar,\n  HomePage,\n  SectionsPage,\n  Paragraph,\n  H1,\n  H2,\n  H3,\n  H4,\n  H5,\n  H6,\n  Link,\n  Blockquote,\n  Hr,\n  InlineCode,\n  OrderedList,\n  UnorderedList,\n} from '@create-react-resume/theme-default'\n\nexport default {\n  layouts: {\n    Navigation: Navbar,\n    HomePage: HomePage,\n    SkillsPage: SectionsPage,\n    RolesPage: SectionsPage,\n    Education: SectionsPage,\n  },\n  elements: {\n    p: props => <Paragraph {...props} />,\n    h1: props => <H1 {...props} />,\n    h2: props => <H2 {...props} />,\n    h3: props => <H3 {...props} />,\n    h4: props => <H4 {...props} />,\n    h5: props => <H5 {...props} />,\n    h6: props => <H6 {...props} />,\n    a: props => <Link {...props} />,\n    blockquote: props => <Blockquote {...props} />,\n    hr: props => <Hr {...props} />,\n    inlineCode: props => <InlineCode {...props} />,\n    ol: props => <OrderedList {...props} />,\n    ul: props => <UnorderedList {...props} />,\n  },\n}\n","import React from 'react'\nimport { UITemplate, Navigation } from '@create-react-resume/core'\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\nimport EducationRoute from './pages/education'\nimport SkillsRoute from './pages/skills'\nimport HomeRoute from './pages/home'\nimport RolesRoute from './pages/roles'\nimport theme from './theme'\nimport { CssBaseline, Header, Main, Footer } from '@create-react-resume/theme-default'\n\nconst App = () => {\n  return (\n    <>\n      <Router>\n        <UITemplate {...theme}>\n          <CssBaseline />\n          <Header>\n            <Navigation\n              email=\"mailto:#\"\n              github=\"https://github.com/matmalkowski\"\n              linkedin=\"#\"\n              medium=\"#\"\n              twitter=\"#\"\n              stackoverflow=\"#\"\n            >\n              <Link to=\"/\">Home</Link>\n              <Link to=\"/roles\">Roles</Link>\n              <Link to=\"/skills\">Skills</Link>\n              <Link to=\"/education\">Education</Link>\n            </Navigation>\n          </Header>\n          <Main>\n            <HomeRoute />\n            <RolesRoute />\n            <SkillsRoute />\n            <EducationRoute />\n          </Main>\n          <Footer>\n            Made with{' '}\n            <span role=\"img\" aria-label=\"heart\">\n              ❤️\n            </span>{' '}\n            using{' '}\n            <a href=\"https://github.com/matmalkowski/create-react-resume\">\n              Create React Resume{' '}\n              <span role=\"img\" aria-label=\"document\">\n                📄\n              </span>\n            </a>\n          </Footer>\n        </UITemplate>\n      </Router>\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}